#!/bin/bash
# Create a new Git repository
#
#  Copyright (C) 2014 LoVullo Associates, Inc.
#
#  This file is part of boilerepo.
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

host=thrall1.lovullo.local
user=git
reponame="$1"

# place ourselves into a known working directory
cd "$(dirname $0)"/../src

source remote.sh "$user" "$host"


##
# Prompt for the repository name
#
# Will recurse until a name is entered, but will default to the name entered on
# the command line.
#
prompt-repo-name()
{
  local name
  read -p "Enter an all-lowercase name for this repo ($reponame): " name

  # use what they entered on the command line if nothing here was entered
  if [ -z "$name" ]; then
    name="$reponame"
  fi

  test -n "$name" \
    && echo "${name%%.git}" \
    || prompt-repo-name
}


##
# Prompt for the repository type
#
# After a selection is made, the type README will be displayed, along with a
# list of all repositories of that type (as examples). If the user indicates
# that they do not want this selection, then they will be asked to choose
# another.
#
prompt-type()
{
  echo 'Please select a repo to view its description' >&2

  local -r PS3='What type of repo? '
  local -r types=($@)
  local type

  select type; do
    test -n "$type" || {
      echo "Invalid type"
      continue
    }

    get-type-readme "$type"
    echo

    echo 'Here are the existing repositories of this type:'
    list-type-repos "$type"
    echo

    local ok=n
    read -p 'Is this the type of repository you want (y/N)? ' ok

    test "$ok" == y || continue
    break
  done >&2

  echo "$type"
}


##
# Program entry point
#
main()
{
  echo "Retrieving repository type list..."

  local -r type="$( prompt-type $(get-type-list) )"
  local -r name="$( prompt-repo-name )"
  echo

  local -r path="$type/$name.git"
  local ok
  read -p "Going to create $path; is this ok (y/N)? " ok

  test "$ok" == y || return 1

  local -r clonepath="./${path%%.git}"
  create-repo "$path" \
    && git clone "$user@$host":"$path" "$clonepath" \
    || {
      echo "Failed to create repository; I have failed you." >&2
      return 1
    }

  echo "Your repository has been set up and cloned into $clonepath"
  echo 'Happy hacking.'
}

main

